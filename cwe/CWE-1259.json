{
 "ID": 1259,
 "Name": "Improper Protection of Security Identifiers",
 "Description": "The product implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity.  However, the Security Identifiers are improperly protected.",
 "PotentialMitigations": {
  "Mitigation": [
   {
    "Phase": [
     "Architecture and Design",
     "Implementation"
    ],
    "Strategy": "",
    "Description": [
     "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t"
    ]
   }
  ]
 },
 "RelatedAttackPatterns": {
  "RelatedAttackPattern": null
 },
 "CommonConsequences": {
  "Consequence": [
   {
    "Scope": [
     "Confidentiality",
     "Integrity",
     "Availability",
     "Access Control"
    ],
    "Impact": [
     "Modify Files or Directories",
     "Execute Unauthorized Code or Commands",
     "Bypass Protection Mechanism",
     "Gain Privileges or Assume Identity",
     "Modify Memory",
     "Modify Memory",
     "DoS: Crash, Exit, or Restart"
    ]
   }
  ]
 },
 "ExtendedDescription": [
  "Systems-On-Chip (Integrated circuits and hardware engines) implement Security Identifiers to differentiate/identify actions originated from various agents.  These actions could be ‘read’, ‘write’, ‘program’, ‘reset’, ‘fetch’, ‘compute’, etc.  Security identifiers are assigned to every agent in the System that is either capable of generating an action or receiving an action from other agent. Every agent could be assigned a unique Security Identifier based on its trust level or privileges.  Since the Security Identifiers are very important to achieve security in SoC, they should be protected properly.  A common weakness that can exist is that the Security Identifiers are improperly protected.  Consequently, the Security Identifier can be programmed by a malicious agent (i.e., the Security Identifier is mutable) to spoof the action as if it originated from a trusted agent."
 ]
}